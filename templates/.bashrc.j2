#
# ~/.bashrc
#
# set -x
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Set up ezt as an ls replacement
alias ls='eza --header --icons --group-directories-first --long --binary --group --time-style=long-iso --git'

# Set up zoxide as a cd replacement
eval "$(zoxide init --cmd cd bash)"

# Add completions
eval "$(tenv completion bash)"
eval "$(op completion bash)"

# Set up the prompt via Starship
eval "$(starship init bash)"

# Set up the editor
export EDITOR=nano

# Set bash history size
export HISTSIZE=9001
export HISTFILESIZE=9001

# Add generic secrets
[[ -e /home/{{ username }}/.bashrc.secrets ]] && source /home/{{ username }}/.bashrc.secrets

# Configure aws-vault
export AWS_VAULT_BACKEND=file
[[ -e /home/{{ username }}/.bashrc.secrets.aws_vault_file_passphrase ]] && source /home/{{ username }}/.bashrc.secrets.aws_vault_file_passphrase

# Start keychain
eval "$(keychain --quiet --eval id_ed25519)"

# Wait for network connectivity for a maximum of 10 seconds
function wait_for_connectivity() {
    for i in {1..10}; do
        if ping -q -c 1 -W 1 1.1.1.1 >/dev/null; then
            return 0
        fi
    done
    return 1
}
wait_for_connectivity

# Log in to 1Password
[[ -e /home/{{ username }}/.bashrc.secrets.op_password ]] && source /home/{{ username }}/.bashrc.secrets.op_password
op account get >/dev/null 2>&1 || eval "$(op signin <<< "${OP_PASSWORD}")"
unset OP_PASSWORD
